import base64
import tkinter as tk
from tkinter import ttk, messagebox
import codecs

def encrypt_pass():
    text = entry.get()
    algo = algo_var.get()

    if not text:
        messagebox.showwarning("Input Error", "Please enter text to encrypt.")
        return

    try:
        if algo == "Base64":
            encoded = base64.b64encode(text.encode()).decode()
        elif algo == "Base32":
            encoded = base64.b32encode(text.encode()).decode()
        elif algo == "Base16":
            encoded = base64.b16encode(text.encode()).decode()
        elif algo == "Hex":
            encoded = text.encode().hex()
        elif algo == "ROT13":
            encoded = codecs.encode(text, 'rot_13')
        else:
            encoded = "Unsupported algorithm"
        result.set(encoded)
    except Exception as e:
        messagebox.showerror("Encryption Error", str(e))


def decrypt_pass():
    text = entry.get()
    algo = algo_var.get()

    if not text:
        messagebox.showwarning("Input Error", "Please enter text to decrypt.")
        return

    try:
        if algo == "Base64":
            decoded = base64.b64decode(text.encode()).decode()
        elif algo == "Base32":
            decoded = base64.b32decode(text.encode()).decode()
        elif algo == "Base16":
            decoded = base64.b16decode(text.encode()).decode()
        elif algo == "Hex":
            decoded = bytes.fromhex(text).decode()
        elif algo == "ROT13":
            decoded = codecs.decode(text, 'rot_13')
        else:
            decoded = "Unsupported algorithm"
        result.set(decoded)
    except Exception as e:
        messagebox.showerror("Decryption Error", str(e))

# GUI Setup
app = tk.Tk()
app.title("üîê Criptify")
app.geometry("500x400")
app.configure(bg="#2b2d42")

# Style
style = {
    "font": ("Segoe UI", 12),
    "bg": "#2b2d42",
    "fg": "#edf2f4"
}

entry_style = {
    "font": ("Consolas", 12),
    "width": 50,
    "bg": "#edf2f4",
    "fg": "#2b2d42",
    "bd": 2
}

# Widgets
tk.Label(app, text="Enter Text:", **style).pack(pady=10)
entry = tk.Entry(app, **entry_style)
entry.pack()

tk.Label(app, text="Select Algorithm:", **style).pack(pady=10)
algo_var = tk.StringVar()
algos = ["Base64", "Base32", "Base16", "Hex", "ROT13"]
algo_dropdown = ttk.Combobox(app, textvariable=algo_var, values=algos, font=("Segoe UI", 11))
algo_dropdown.current(0)
algo_dropdown.pack()

tk.Button(app, text="üîí Encrypt", font=("Segoe UI", 11), bg="#8d99ae", fg="#fff", width=20, command=encrypt_pass).pack(pady=12)
tk.Button(app, text="üîì Decrypt", font=("Segoe UI", 11), bg="#ef233c", fg="#fff", width=20, command=decrypt_pass).pack()

tk.Label(app, text="Result:", **style).pack(pady=10)
result = tk.StringVar()
tk.Entry(app, textvariable=result, font=("Consolas", 12), width=50, bg="#edf2f4", fg="#2b2d42", bd=2, state='readonly').pack()

# Footer
tk.Label(app, text="Made with ‚ù§Ô∏è by Anshika", font=("Segoe UI", 9), bg="#2b2d42", fg="#8d99ae").pack(pady=10)

app.mainloop()
